一、数组：在连续内存空间上存储的相同类型数据的集合。

二、数组相关算法题的经典解题思路

    1、二分法
        1)、若是target在有序数组最小值的左侧时： l 保持不变为 0、而 r=l-1 为 -1
        2)、若是target在有序数组最大值的右侧时： r 保持不变为 nums.length-1、而 l=r+1为 nums.length
        3)、若是target在有序数组范围内、但不是任一数组元素时：l与r最终会相邻并交换位置。
           例如nums为{-1, 0, 3},target为2时，最终 l=2，r=1

    2、双指针法
           通过两个指针(快慢/对撞指针)在一个for循环里完成两个for循环的工作，将时间复杂度从O(n^2)降为O(n)，
           常用于求解数组和链表题型。

    3、滑动窗口
         *  滑动窗口: 不断地调节子序列的起始位置和终止位置，从而得到想要的结果。
         *            有两个指针，一个用于「延伸」现有窗口的 r 指针，和一个用于「收缩」现有窗口的 l 指针。
         *            在任意时刻，只有一个指针运动，而另一个保持静止。
         *  时间复杂度: 每个元素在滑动窗口进来时操作一次，出去时操作一个。所以是两个循环，为 2n，即O(n)
         *
         *  滑动窗口是双指针法的一种特殊运用

         滑动窗口的精髓就是动态调节现有窗口的起始位置。
                     while (sum >= target) {
                         sum -= nums[l];
                         int currentLen = r - l + 1;
                         minLen = currentLen < minLen ? currentLen : minLen;
                         l++;
                     }

    4、模拟行为：就是单纯的模拟

